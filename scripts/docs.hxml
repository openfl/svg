# Generate platform-specific XML for documentation output

# -xml xml/Flash.xml
# -swf obj/docs
# -swf-version 17.0
# -D display=usage
# -D doc_gen
# --macro include("starling")
# -lib lime
# -lib openfl
# -cp ..
# --no-output

-xml xml/Flash.xml
-cpp obj/docs
-D display=usage
-D doc_gen
-D flash_doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/Windows.xml
-cpp obj/docs
-D display=usage
-D windows
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/macOS.xml
-cpp obj/docs
-D display=usage
-D mac
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/Linux.xml
-cpp obj/docs
-D display=usage
-D linux
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/Neko.xml
-neko obj/docs
-D display=usage
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/iOS.xml
-cpp obj/docs
-D display=usage
-D ios
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/Android.xml
-cpp obj/docs
-D display=usage
-D android
-D doc_gen
-D nocffi
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-xml xml/HTML5.xml
-js obj/docs
-D display=usage
-D html5
-D doc_gen
--macro include("format")
-lib lime
-lib openfl
-cp ..
--no-output

--next

-cmd haxelib run dox -o ../docs -i xml -in format --toplevel-package format -D website "http://www.openfl.org" -D source-path "https://github.com/openfl/svg/tree/master/src/" --title "SVG API Reference"